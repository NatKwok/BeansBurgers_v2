// <auto-generated />
using System;
using BeansBurgers_v2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeansBurgersv2.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230209175341_Thursday")]
    partial class Thursday
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeansBurgers_v2.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<double>("ExtraCost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 0,
                            ExtraCost = 3.5,
                            Name = "Brioche"
                        },
                        new
                        {
                            Id = 2,
                            Category = 0,
                            ExtraCost = 3.5,
                            Name = "Ciabatta"
                        },
                        new
                        {
                            Id = 3,
                            Category = 0,
                            ExtraCost = 3.75,
                            Name = "Whole Wheat Brioche"
                        },
                        new
                        {
                            Id = 4,
                            Category = 0,
                            ExtraCost = 3.75,
                            Name = "Sesame Seed Brioche"
                        },
                        new
                        {
                            Id = 5,
                            Category = 0,
                            ExtraCost = 3.75,
                            Name = "Poppy Seed Brioche"
                        },
                        new
                        {
                            Id = 6,
                            Category = 1,
                            ExtraCost = 7.0500001907348633,
                            Name = "Angus Beef"
                        },
                        new
                        {
                            Id = 7,
                            Category = 1,
                            ExtraCost = 6.5,
                            Name = "Fried Chicken"
                        },
                        new
                        {
                            Id = 8,
                            Category = 1,
                            ExtraCost = 6.0,
                            Name = "Fish Cake"
                        },
                        new
                        {
                            Id = 9,
                            Category = 1,
                            ExtraCost = 8.0,
                            Name = "Bison"
                        },
                        new
                        {
                            Id = 10,
                            Category = 1,
                            ExtraCost = 7.0,
                            Name = "Beyond Meat"
                        },
                        new
                        {
                            Id = 11,
                            Category = 1,
                            ExtraCost = 5.5,
                            Name = "Portobello"
                        },
                        new
                        {
                            Id = 12,
                            Category = 2,
                            ExtraCost = 3.25,
                            Name = "Lettuce"
                        },
                        new
                        {
                            Id = 13,
                            Category = 2,
                            ExtraCost = 3.25,
                            Name = "Tomatoes"
                        },
                        new
                        {
                            Id = 14,
                            Category = 2,
                            ExtraCost = 3.25,
                            Name = "Pickles"
                        },
                        new
                        {
                            Id = 15,
                            Category = 2,
                            ExtraCost = 3.25,
                            Name = "Red Onions"
                        },
                        new
                        {
                            Id = 16,
                            Category = 2,
                            ExtraCost = 3.5,
                            Name = "Caramelized Onions"
                        },
                        new
                        {
                            Id = 17,
                            Category = 2,
                            ExtraCost = 3.5,
                            Name = "Mushrooms"
                        },
                        new
                        {
                            Id = 18,
                            Category = 2,
                            ExtraCost = 3.5,
                            Name = "Banana Peppers"
                        },
                        new
                        {
                            Id = 19,
                            Category = 2,
                            ExtraCost = 4.0,
                            Name = "Cheddar Cheese"
                        },
                        new
                        {
                            Id = 20,
                            Category = 2,
                            ExtraCost = 7.0,
                            Name = "Bacon"
                        },
                        new
                        {
                            Id = 21,
                            Category = 2,
                            ExtraCost = 4.25,
                            Name = "Jalapeno Monterey Jack"
                        },
                        new
                        {
                            Id = 22,
                            Category = 2,
                            ExtraCost = 4.5,
                            Name = "Swiss Cheese"
                        },
                        new
                        {
                            Id = 23,
                            Category = 2,
                            ExtraCost = 4.25,
                            Name = "Goat Cheese"
                        },
                        new
                        {
                            Id = 24,
                            Category = 3,
                            ExtraCost = 3.0,
                            Name = "Ketchup"
                        },
                        new
                        {
                            Id = 25,
                            Category = 3,
                            ExtraCost = 3.0,
                            Name = "Mustard"
                        },
                        new
                        {
                            Id = 26,
                            Category = 3,
                            ExtraCost = 3.0,
                            Name = "Relish"
                        },
                        new
                        {
                            Id = 27,
                            Category = 3,
                            ExtraCost = 3.25,
                            Name = "Mayonnaise"
                        },
                        new
                        {
                            Id = 28,
                            Category = 3,
                            ExtraCost = 3.5,
                            Name = "Spicy Mayonnaise"
                        },
                        new
                        {
                            Id = 29,
                            Category = 3,
                            ExtraCost = 3.25,
                            Name = "Tartar Sauce"
                        },
                        new
                        {
                            Id = 30,
                            Category = 3,
                            ExtraCost = 3.25,
                            Name = "Barbecue Sauce"
                        },
                        new
                        {
                            Id = 31,
                            Category = 3,
                            ExtraCost = 3.5,
                            Name = "Pico de Gallo"
                        },
                        new
                        {
                            Id = 32,
                            Category = 3,
                            ExtraCost = 3.75,
                            Name = "Guacamole"
                        });
                });

            modelBuilder.Entity("BeansBurgers_v2.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Buns")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Patties")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Sauces")
                        .HasColumnType("int");

                    b.Property<int>("Toppings")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Buns = 0,
                            Name = "Fries",
                            Patties = 0,
                            Price = 5.5,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 2,
                            Buns = 0,
                            Name = "Poutine",
                            Patties = 0,
                            Price = 7.5,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 3,
                            Buns = 0,
                            Name = "Chicken Nuggets",
                            Patties = 0,
                            Price = 6.5,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 4,
                            Buns = 0,
                            Name = "Onion Rings",
                            Patties = 0,
                            Price = 6.0,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 5,
                            Buns = 0,
                            Name = "Fried Pickles",
                            Patties = 0,
                            Price = 5.5,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 6,
                            Buns = 0,
                            Name = "Cheese Sticks",
                            Patties = 0,
                            Price = 7.0,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 7,
                            Buns = 0,
                            Name = "Pepsi",
                            Patties = 0,
                            Price = 3.5,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 8,
                            Buns = 0,
                            Name = "7-Up",
                            Patties = 0,
                            Price = 3.5,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 9,
                            Buns = 0,
                            Name = "Iced Tea",
                            Patties = 0,
                            Price = 3.5,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 10,
                            Buns = 0,
                            Name = "Dom Perignon Brut Champagne",
                            Patties = 0,
                            Price = 214.97000122070312,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 11,
                            Buns = 0,
                            Name = "Celebrity Appearance",
                            Patties = 0,
                            Price = 999.989990234375,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 12,
                            Buns = 0,
                            Name = "24 Karat Gold Leaf",
                            Patties = 0,
                            Price = 15.0,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 13,
                            Buns = 0,
                            Name = "Glenfarclas Single Malt 25",
                            Patties = 0,
                            Price = 199.99000549316406,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 14,
                            Buns = 0,
                            Name = "Diner avec Jay-Z",
                            Patties = 0,
                            Price = 500000.0,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 15,
                            Buns = 0,
                            Description = "Brioche Bread, Angus Beef, Lettuce, Tomatoes, Pickles, Ketchup, Mustard Relish",
                            Name = "La Basique",
                            Patties = 0,
                            Price = 29.25,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 16,
                            Buns = 0,
                            Description = "Sesame Seed Brioche, Angus Beef, Caramelized Onions, Mushrooms, Cheddar Cheese, Bacon, Barbecue Sauce",
                            Name = "Le Fumé",
                            Patties = 0,
                            Price = 31.989999771118164,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 17,
                            Buns = 0,
                            Description = "Poppy Seed Brioche, Fried Chicken, Lettuce, Tomatoes, Goat Cheese, Spicy Mayonnaise",
                            Name = "La Volaille",
                            Patties = 0,
                            Price = 24.5,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 18,
                            Buns = 0,
                            Description = "Ciabatta, Fish Cake, Lettuce, Tomatoes, Pickles, Tartar Sauce",
                            Name = "La Piscicole",
                            Patties = 0,
                            Price = 22.5,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 19,
                            Buns = 0,
                            Description = "Poppy Seed Brioche, Portobello, Lettuce, Tomatoes, Pickles, Red Onions, Ketchup, Mustard, Relish",
                            Name = "Le Champignon",
                            Patties = 0,
                            Price = 31.25,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 20,
                            Buns = 0,
                            Description = "Sesame Seed Brioche, Bison Patty, Lettuce, Tomatoes, Pickles, Caramelized Onions, Swiss Cheese, Mustard, Mayonnaise",
                            Name = "La Pastourelle",
                            Patties = 0,
                            Price = 35.75,
                            Sauces = 0,
                            Toppings = 0
                        },
                        new
                        {
                            Id = 21,
                            Buns = 0,
                            Description = "Brioche, Angus Beef, Lettuce, Tomatoes, Pickles, Jalapeno Monterey Jack, Pico de Gallo, Guacamole",
                            Name = "Le Mex",
                            Patties = 0,
                            Price = 31.75,
                            Sauces = 0,
                            Toppings = 0
                        });
                });

            modelBuilder.Entity("BeansBurgers_v2.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("DeliveryCost")
                        .HasColumnType("money");

                    b.Property<string>("StripePaymentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("money");

                    b.Property<decimal>("Total")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BeansBurgers_v2.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("BurgerPrice")
                        .HasColumnType("real");

                    b.Property<string>("CustomBurger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("BeansBurgers_v2.Models.PaymentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreditCard")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("PaymentInfos");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BeansBurgers_v2.Models.Order", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BeansBurgers_v2.Models.OrderItem", b =>
                {
                    b.HasOne("BeansBurgers_v2.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId");

                    b.HasOne("BeansBurgers_v2.Models.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("BeansBurgers_v2.Models.PaymentInfo", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeansBurgers_v2.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
